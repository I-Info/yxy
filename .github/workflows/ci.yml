name: CI

on:
  push:
    branches: [main]
    tags:
      - "v*.*.*"
  pull_request:
    branches: [main]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    strategy:
      matrix:
        include:
          - os: "ubuntu-latest"
            target: "x86_64-unknown-linux-gnu"
          - os: "windows-latest"
            target: "x86_64-pc-windows-msvc"
          - os: "macos-latest"
            target: "x86_64-apple-darwin"

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v3

      - name: List support target platform
        run: rustup target list

      - uses: Swatinem/rust-cache@v1

      - name: Build
        run: cargo build -vr

      - name: Run tests
        run: cargo test -vr

      - name: List target
        run: ls -l target/release

      - name: Upload build artifact
        uses: actions/upload-artifact@v3.1.0
        with:
          name: ${{ matrix.target }}
          path: |
            target/release/*yxy*

  xcframework:
    runs-on: "macos-latest"
    steps:
      - uses: actions/checkout@v3

      - name: Install ARM target
        run: rustup update && rustup target add aarch64-apple-darwin aarch64-apple-ios aarch64-apple-ios-sim x86_64-apple-ios

      - name: List support target platform
        run: rustup target list

      - uses: Swatinem/rust-cache@v1

      # - name: Build for aarch64-apple-darwin
      #   run: cargo build -vr --target=aarch64-apple-darwin

      # - name: Build for aarch-apple-ios
      #   run: cargo build -vr --target=aarch64-apple-ios

      # - name: List target
      #   run: |
      #     ls -lh target/aarch64-apple-darwin/release
      #     ls -lh target/aarch64-apple-ios/release

      - name: Build & Create XCFramework Bundle
        run: |
          ./create_xcframework.sh
          zip -r target/bundle.zip target/YXY.xcframework
          openssl dgst -sha256 target/bundle.zip > target/bundle.zip.checksum

      - name: Upload Bundle
        uses: actions/upload-artifact@v3.1.0
        with:
          name: aarch64-apple-darwin
          path: |
            target/bundle.zip
            target/bundle.zip.checksum

      - name: Upload build artifact for aarch64-apple-darwin
        uses: actions/upload-artifact@v3.1.0
        with:
          name: aarch64-apple-darwin
          path: |
            target/aarch64-apple-darwin/release/*yxy*

      - name: Upload build artifact for aarch64-apple-ios
        uses: actions/upload-artifact@v3.1.0
        with:
          name: aarch64-apple-ios
          path: |
            target/aarch64-apple-ios/release/*yxy*

  publish:
    needs: [build, xcframework]
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest

    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          path: ./artifacts

      - name: Display artifacts
        run: ls -R
        working-directory: ./artifacts

      - name: Extract bin files
        run: |
          mkdir dist
          cp artifacts/x86_64-apple-darwin/yxy dist/yxy-${GITHUB_REF##*/}-x86_64-apple-darwin
          cp artifacts/x86_64-apple-darwin/libyxy.dylib dist/
          cp artifacts/x86_64-pc-windows-msvc/yxy.exe dist/yxy-${GITHUB_REF##*/}-x86_64-pc-windows-msvc.exe
          cp artifacts/x86_64-pc-windows-msvc/yxy.dll dist/
          cp artifacts/x86_64-unknown-linux-gnu/yxy dist/yxy-${GITHUB_REF##*/}-x86_64-unknown-linux-gnu
          cp artifacts/x86_64-unknown-linux-gnu/libyxy.so dist/
          cp artifacts/aarch64-apple-darwin/yxy dist/yxy-${GITHUB_REF##*/}-aarch64-apple-darwin

      - name: Publish release
        uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          prerelease: false
          files: |
            dist/*
